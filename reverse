  //std::cout<<"im running the function again"<<std::endl;
  /// @todo Graded in MP3.2
  if (startPoint == endPoint) {
    return;
  }
  ListNode* startPrev = startPoint->prev;
  ListNode* endNext = endPoint->next;

  ListNode* curr = startPoint;
  ListNode* final = endPoint->next;
  ListNode* currNextHolder = curr->next; //remember this is for reassigning
  //switch all the pointesr from start to end
  while (curr != final) {
    currNextHolder = curr->next;
    curr->next = curr->prev;
    curr->prev = currNextHolder;
    curr = curr->prev; //this actually takes u to "next" spot bc next/prev flipped now
    //curr ends on last element
  }

  startPoint = endPoint;
  endPoint = curr;
  if (startPrev != NULL) {
    startPrev->next = startPoint;
  }
  if (endNext != NULL) {
    endNext->prev = endPoint;
  }
  if (startPrev == NULL) {
    head_ = startPoint;
  }
  if (endNext == NULL) {
    tail_ = endPoint;
  }

